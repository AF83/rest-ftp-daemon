- jobs.each do |job|
  - error = job.get :error
  - status = job.get :status
  - size = job.get :transfer_total
  - progress = job.get :progress
  - source_count = job.get(:source_count) || 0
  - source_processed = job.get(:source_processed) || 0
  - source_processing = job.get(:source_processing)

  - if error!=0 && !error.nil?
    - trclass = "danger"
  - elsif status == :uploading
    - trclass = "info"
  - elsif status == :finished
    - trclass = "success"
  - else
    - trclass = "warning"

  %tr{class: trclass}

    %td= job.id

    %td= job.get :priority

    %td= job.wid

    %td.fixed{title: job.get(:source_path)}
      = Helpers.job_method_label job.get(:source_method)
      = job.get :source

    %td.fixed{title: job.get(:target_url)}
      = Helpers.job_method_label job.get(:target_method)
      = job.get :target

    %td
      = status
      - if (source_count > 0) #&& (source_processed < source_count)
        %small= " #{source_processed}/#{source_count}"

    %td
      = Helpers.text_or_empty(error)
      - unless error || status == :finished
        - unless progress.nil?
          = "#{progress}%"
        - unless source_processing.nil?
          %small= " (#{source_processing})"

    %td
      - unless progress.nil?
        .progress
          .progress-bar{style:"width: #{progress}%;"}
            = Helpers.format_bytes job.get(:transfer_sent), "B"

    %td.nobr.text-right
      = Helpers.format_bytes(size, "B")

    %td.nobr.text-right
      - if (bitrate = job.get :transfer_bitrate)
        =  Helpers.format_bytes(bitrate, "bps")

